#!/usr/bin/env bash
set -euo pipefail

# Colors
BOLD='\033[1m'
DIM='\033[2m'
RESET='\033[0m'
GREEN='\033[32m'
YELLOW='\033[33m'
CYAN='\033[36m'

# Parse flags
GLOBAL=false
ONLY_MODE=false
CLEAR_MODE=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --global)
      GLOBAL=true
      shift
      ;;
    --only)
      ONLY_MODE=true
      shift
      break  # Next arg is agent name
      ;;
    --clear)
      CLEAR_MODE=true
      shift
      ;;
    *)
      break  # Non-flag argument, stop parsing
      ;;
  esac
done

# Set paths based on scope
if [ "$GLOBAL" = true ]; then
  AGENTS_ENV="$HOME/.claude/agents.env"
  AGENTS_DIR="$HOME/.claude/agents"
  CONFIG_FILE="$AGENTS_ENV/agents_config.json"
  SCOPE="global"
else
  SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
  PROJECT_ROOT="$(cd "$SCRIPT_DIR/../.." && pwd)"
  AGENTS_ENV="$PROJECT_ROOT/.claude/agents.env"
  AGENTS_DIR="$PROJECT_ROOT/.claude/agents"
  CONFIG_FILE="$AGENTS_ENV/agents_config.json"
  SCOPE="project"
fi

# Handle --clear mode
if [ "$CLEAR_MODE" = true ]; then
  echo -e "${BOLD}Agent Environment:${RESET} clear ${DIM}($SCOPE)${RESET}\n"

  cleared=0
  if [ -d "$AGENTS_DIR" ]; then
    cleared=$(find "$AGENTS_DIR" -type l | wc -l)
    if [ $cleared -gt 0 ]; then
      find "$AGENTS_DIR" -type l -delete
      echo -e "${GREEN}✓${RESET} Cleared $cleared symlink(s)"
    else
      echo -e "${DIM}No symlinks to clear${RESET}"
    fi
  else
    echo -e "${DIM}No agents directory found${RESET}"
  fi

  exit 0
fi

# Handle --only mode
if [ "$ONLY_MODE" = true ]; then
  if [ $# -eq 0 ]; then
    echo -e "${YELLOW}Error:${RESET} --only requires an agent name"
    echo "Usage: agentenv [--global] --only <agent-name>"
    exit 1
  fi

  AGENT_NAME="$1"

  echo -e "${BOLD}Agent Environment:${RESET} only ${BOLD}$AGENT_NAME${RESET} ${DIM}($SCOPE)${RESET}\n"

  # Clear existing symlinks
  cleared=0
  if [ -d "$AGENTS_DIR" ]; then
    cleared=$(find "$AGENTS_DIR" -type l | wc -l)
    if [ $cleared -gt 0 ]; then
      echo -e "${DIM}Clearing $cleared existing symlink(s)...${RESET}"
      find "$AGENTS_DIR" -type l -delete
    fi
  fi

  mkdir -p "$AGENTS_DIR"

  # Create single symlink
  source="$AGENTS_ENV/${AGENT_NAME}.md"
  target="$AGENTS_DIR/${AGENT_NAME}.md"

  if [ ! -f "$source" ]; then
    echo -e "${YELLOW}Error:${RESET} Agent not found: $source"
    exit 1
  fi

  ln -s "$source" "$target"
  echo -e "  ${GREEN}✓${RESET} $AGENT_NAME"
  echo ""

  if [ $cleared -gt 0 ]; then
    echo -e "${GREEN}✓${RESET} Cleared $cleared symlink(s), created 1 symlink"
  else
    echo -e "${GREEN}✓${RESET} Created 1 symlink"
  fi

  exit 0
fi

# Check if config exists (only needed for profile mode)
if [ ! -f "$CONFIG_FILE" ]; then
  echo -e "${YELLOW}Warning:${RESET} $CONFIG_FILE not found"
  exit 1
fi

# Usage / Listing
if [ $# -eq 0 ]; then
  echo -e "${BOLD}Usage:${RESET}"
  echo "  agentenv [--global] <profile>       # Switch to profile"
  echo "  agentenv [--global] --only <agent>  # Activate single agent"
  echo "  agentenv [--global] --clear         # Remove all agents"
  echo ""
  echo -e "${CYAN}Scope:${RESET} $SCOPE"
  echo ""

  if [ -f "$CONFIG_FILE" ]; then
    echo "Available profiles:"
    jq -r '.profiles | keys[]' "$CONFIG_FILE" | while read -r profile; do
      agents=$(jq -r ".profiles[\"$profile\"] | join(\", \")" "$CONFIG_FILE")
      echo "  $profile: $agents"
    done
    echo ""
    echo "Default agents (always included):"
    jq -r '.default | join(", ")' "$CONFIG_FILE"
  else
    echo -e "${YELLOW}No config found at:${RESET} $CONFIG_FILE"
  fi

  echo ""
  echo "Available agents in $AGENTS_ENV:"
  if [ -d "$AGENTS_ENV" ]; then
    find "$AGENTS_ENV" -name "*.md" -printf "%f\n" | sed 's/.md$//' | sort | while read -r agent; do
      echo "  • $agent"
    done
  else
    echo -e "${DIM}  (directory not found)${RESET}"
  fi

  exit 0
fi

PROFILE="$1"

# Check if profile exists
if ! jq -e ".profiles[\"$PROFILE\"]" "$CONFIG_FILE" >/dev/null 2>&1; then
  echo -e "${YELLOW}Error:${RESET} Profile '$PROFILE' not found in $CONFIG_FILE"
  exit 1
fi

echo -e "${BOLD}Agent Environment:${RESET} $PROFILE ${DIM}($SCOPE)${RESET}\n"

# Clear existing symlinks
cleared=0
if [ -d "$AGENTS_DIR" ]; then
  # Count symlinks before deleting
  cleared=$(find "$AGENTS_DIR" -type l | wc -l)
  if [ $cleared -gt 0 ]; then
    echo -e "${DIM}Clearing $cleared existing symlink(s)...${RESET}"
    find "$AGENTS_DIR" -type l -delete
  fi
fi

mkdir -p "$AGENTS_DIR"

# Get default agents
mapfile -t default_agents < <(jq -r '.default[]' "$CONFIG_FILE")

# Get profile agents
profile_agents=$(jq -r ".profiles[\"$PROFILE\"][]" "$CONFIG_FILE")

# Collect all agents to symlink
declare -A agents_to_link

# Add default agents
for agent in "${default_agents[@]}"; do
  agents_to_link["$agent"]=1
done

# Add profile agents (handle "*" for all)
if echo "$profile_agents" | grep -q '^\*$'; then
  # Wildcard - add all agents from agents.env
  while IFS= read -r -d '' file; do
    basename=$(basename "$file" .md)
    agents_to_link["$basename"]=1
  done < <(find "$AGENTS_ENV" -name "*.md" -print0)
else
  # Add specific profile agents
  while IFS= read -r agent; do
    [ -n "$agent" ] && agents_to_link["$agent"]=1
  done <<< "$profile_agents"
fi

# Create symlinks
count=0
for agent in "${!agents_to_link[@]}"; do
  source="$AGENTS_ENV/${agent}.md"
  target="$AGENTS_DIR/${agent}.md"

  if [ -f "$source" ]; then
    ln -s "$source" "$target"
    echo -e "  ${GREEN}✓${RESET} $agent"
    count=$((count + 1))
  else
    echo -e "  ${YELLOW}⚠${RESET} $agent (source not found)"
  fi
done

echo ""
if [ $cleared -gt 0 ]; then
  echo -e "${GREEN}✓${RESET} Cleared $cleared symlink(s), created $count symlink(s) for profile: ${BOLD}$PROFILE${RESET}"
else
  echo -e "${GREEN}✓${RESET} Created $count symlink(s) for profile: ${BOLD}$PROFILE${RESET}"
fi
